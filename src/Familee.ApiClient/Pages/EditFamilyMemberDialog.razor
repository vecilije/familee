@using Familee.Domain.Entities
@using Familee.ApiClient.Gateways

<MudDialog>
    <DialogContent>
        <MudForm @ref="form">
            <MudTextField T="string" Label="First Name" @bind-Value="familyMember.FirstName"></MudTextField>
            <MudTextField T="string" Label="Last Name" @bind-Value="familyMember.LastName"></MudTextField>
            <MudSelect T="string" Label="Pol" ValueChanged="@((value) => familyMember.Gender = Enum.Parse<Gender>(value))">
                <MudSelectItem T="string" Value="@Gender.Male.ToString()">Muški</MudSelectItem>
                <MudSelectItem T="string" value="@Gender.Female.ToString()">Ženski</MudSelectItem>
            </MudSelect>
            <MudTextField T="int?" Label="Godina Rođenja" @bind-Value="familyMember.BirthYear"></MudTextField>
            <MudTextField T="int?" Label="Godina Smrti" @bind-Value="familyMember.DeathYear"></MudTextField>
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="SaveData" 
                   StartIcon="@Icons.Material.Save">Sačuvaj</MudButton>
    </DialogActions>
</MudDialog>

@code {

    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; }
    
    [Inject]
    private IFamilyMemberApiGateway FamilyMemberApiGateway { get; set; }
    
    [Inject]
    private ISnackbar Snackbar { get; set; }

    private FamilyMemberDto familyMember = new FamilyMemberDto();
    private MudForm form;

    private async Task SaveData()
    {
        try
        {
            await FamilyMemberApiGateway.AddAsync(familyMember);
            await MudDialog.Close(DialogResult.Ok(true));
        }
        catch (Exception ex)
        {
            Snackbar.Error($"Error: {ex.Message}");
        }
    }

    void Cancel() => MudDialog.Cancel();
}



@code {

}