@using Familee.App.Infrastructure.Helpers
@if (FamilyMember != null)
{
  <MatCard Class="family-member-card">
    <MatCardContent>
      <MatCardMedia Square="true" ImageUrl="@ImageResolver.ResolveImageUrl(FamilyMember)"></MatCardMedia>
      <div class="family-member-card-content">
        <MatHeadline6 class="clean-margin">
          @FamilyMember.PrintFullName()
        </MatHeadline6>
        <MatSubtitle2 class="clean-margin">
          @FamilyMember.PrintGenderSymbol()
          @FamilyMember.PrintYears()
        </MatSubtitle2>
      </div>
    </MatCardContent>

    <MatCardActions>
      <MatCardActionButtons>
        <MatButton OnClick="@(() => Navigator.NavigateToFamilyMemberInfo(FamilyMember.Id))">Info</MatButton>
      </MatCardActionButtons>

      <MatCardActionIcons>
        <MatIconButton Icon="@MatIconNames.Edit" OnClick="@(() => Navigator.NavigateToFamilyMemberEdit(FamilyMember.Id))"></MatIconButton>
        <MatIconButton Icon="@MatIconNames.Remove_circle" OnClick="RemoveClick"></MatIconButton>
      </MatCardActionIcons>
    </MatCardActions>
  </MatCard>
}


@code {

  private bool _isDialogOpen = false;

  [Parameter]
  public FamilyMember FamilyMember { get; set; }
  
  [Inject]
  private INavigator Navigator { get; set; }
  
  [Inject]
  private IMatDialogService DialogService { get; set; }
  
  [Inject]
  private IMatToaster Toaster { get; set; }
  
  [Inject]
  private IFamilyMemberImageResolver ImageResolver { get; set; }

  private async Task RemoveClick()
  {
    var shouldRemove = 
      await DialogService.ConfirmAsync("You really want to remove selected family member?");

    if (shouldRemove)
    {
      //ToDo: Remove Family Member
      Toaster.Add("Family member successfully removed.", MatToastType.Success);
    }
  }

}